{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/EditPostForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPostById, updatePost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { Status } from \"./postsSlice\"; // ROUTER\n\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const post = useSelector(state => selectPostById(state, Number(postId)));\n  const users = useSelector(selectAllUsers); // Il post potrebbe essere undefined quindi col ? si specifica che si usa lo useState solo se il post esiste\n\n  const [title, setTitle] = useState(post === null || post === void 0 ? void 0 : post.title);\n  const [content, setContent] = useState(post === null || post === void 0 ? void 0 : post.body);\n  const [userId, setuserId] = useState(post === null || post === void 0 ? void 0 : post.userId);\n  const [requestStatus, setRequestStatus] = useState(Status.IDLE);\n  const dispatch = useDispatch();\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"post-not-found w-100 h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  const onTitleChanged = e => {\n    setTitle(e.target.value);\n  };\n\n  const onContentChanged = e => {\n    setContent(e.target.value);\n  };\n\n  const onAuthorChanged = e => {\n    setuserId(e.target.value);\n  };\n\n  const canSave = [title, content, userId].every(Boolean) && requestStatus === Status.IDLE;\n\n  const savePost = e => {\n    e.preventDefault();\n\n    if (canSave) {\n      try {\n        setRequestStatus(Status.PENDING);\n        dispatch(updatePost({\n          id: post.id,\n          title,\n          body: content,\n          userId,\n          reactions: post.reactions\n        })).unwrap();\n        setTitle('');\n        setContent('');\n        setuserId('');\n        navigate(`/post/${postId}`);\n      } catch (err) {\n        if (typeof err === 'string') {\n          console.log(err);\n        } else if (err instanceof Error) {\n          console.log(err.message);\n        }\n      } finally {\n        setRequestStatus(Status.IDLE);\n      }\n    }\n  };\n\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: savePost,\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-title\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"post-title\",\n        name: \"post-title\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-author\",\n        className: \"mt-2\",\n        children: \"Post Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"mb-2\",\n        name: \"post-author\",\n        id: \"post-author\" // Si mette la defaultValue perché a differenza del nuovo post questo ha già un value che è l'utente attuale\n        ,\n        defaultValue: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-content\",\n        children: \"Post Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"post-content\",\n        name: \"post-content\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2\" // Disabled è l'opposto di canSave\n        ,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPostForm, \"qVF3qcDdKViwdagKihqF41fXSqA=\", false, function () {\n  return [useParams, useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = EditPostForm;\nexport default EditPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","selectPostById","updatePost","selectAllUsers","Status","useParams","useNavigate","EditPostForm","postId","navigate","post","state","Number","users","title","setTitle","content","setContent","body","userId","setuserId","requestStatus","setRequestStatus","IDLE","dispatch","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","savePost","preventDefault","PENDING","id","reactions","unwrap","err","console","log","Error","message","usersOptions","map","user","name"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/EditPostForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPostById, updatePost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { RootState, AppDispatch } from \"../../app/store\";\nimport { Status } from \"./postsSlice\";\n// ROUTER\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst EditPostForm = () => {\n\n    const {postId} = useParams();\n    const navigate = useNavigate();\n\n    const post = useSelector((state: RootState) => selectPostById(state, Number(postId)));\n    const users = useSelector(selectAllUsers);\n\n    // Il post potrebbe essere undefined quindi col ? si specifica che si usa lo useState solo se il post esiste\n    const [title, setTitle] = useState(post?.title);\n    const [content, setContent] = useState(post?.body);\n    const [userId, setuserId] = useState(post?.userId);\n    const [requestStatus, setRequestStatus] = useState(Status.IDLE);\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    if(!post){\n        return (\n            <section className=\"post-not-found w-100 h-100\">\n                <h2>Post not found!</h2>\n            </section>\n        );\n    }\n\n    const onTitleChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.target.value);\n    }\n    const onContentChanged = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setContent(e.target.value);\n    }\n    const onAuthorChanged = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setuserId(e.target.value);\n    }\n\n\n    const canSave = [title, content, userId].every(Boolean) && requestStatus === Status.IDLE;\n\n    const savePost = (e: React.FormEvent) => {\n        e.preventDefault();\n        if(canSave){\n            try{\n                setRequestStatus(Status.PENDING);\n                dispatch(updatePost({ id: post.id, title, body: content, userId, reactions: post.reactions})).unwrap();\n\n                setTitle('');\n                setContent('');\n                setuserId('');\n                navigate(`/post/${postId}`);\n\n            } catch(err){\n                if(typeof err === 'string'){\n                    console.log(err)\n                } else if(err instanceof Error){\n                    console.log(err.message);\n                }\n\n            } finally{\n                setRequestStatus(Status.IDLE);\n            }\n        }\n    }\n\n    const usersOptions = users.map(user => (\n        <option\n            key={user.id}\n            value={user.id}\n        >\n            {user.name}\n        </option>\n    ));\n\n    return (\n        <section>\n            <h2>Edit Post</h2>\n            <form onSubmit={savePost} className='d-flex flex-column'>\n                \n                {/* TITLE */}\n                <label htmlFor=\"post-title\">Post Title:</label>\n                <input \n                    type=\"text\" \n                    id='post-title'\n                    name='post-title'\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n\n                {/* AUTHOR */}\n                <label htmlFor=\"post-author\" className='mt-2'>Post Author:</label>\n                <select\n                    className='mb-2' \n                    name=\"post-author\" \n                    id=\"post-author\"\n                    // Si mette la defaultValue perché a differenza del nuovo post questo ha già un value che è l'utente attuale\n                    defaultValue={userId}\n                    onChange={onAuthorChanged}\n                >\n                    {/* Vuota */}\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n\n                {/* CONTENT */}\n                <label htmlFor=\"post-content\">Post Content:</label>\n                <textarea \n                    id='post-content' \n                    name='post-content'\n                    value={content}\n                    onChange={onContentChanged}\n                />\n                <button \n                    type='submit' \n                    className='mt-2'\n                    // Disabled è l'opposto di canSave\n                    disabled={!canSave}\n                >\n                    Save Post\n                </button>\n            </form>\n        </section>\n    );\n}\n\nexport default EditPostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}