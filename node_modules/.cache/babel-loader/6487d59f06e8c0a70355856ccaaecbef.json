{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/PostsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux'; // Import della selezione di tutti i post\n\nimport { selectAllPosts, getPostStatus, getPostsError, fetchPosts } from './postsSlice';\nimport { useEffect } from 'react';\nimport PostsExcept from './PostsExcept';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = () => {\n  _s();\n\n  const dispatch = useDispatch(); // Legata la selezione di tutti i post\n\n  const posts = useSelector(selectAllPosts);\n  const postsStatus = useSelector(getPostStatus);\n  const error = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]);\n  let content;\n\n  if (postsStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this);\n  } else if (postsStatus === 'succeeded') {\n    const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderedPosts.map(post => /*#__PURE__*/_jsxDEV(PostsExcept, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-section pt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-wrapper w-50 mx-auto p-1\",\n      children: renderedPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"xOfALbeNiurMcSA9N+vFr+Uoyrc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","selectAllPosts","getPostStatus","getPostsError","fetchPosts","useEffect","PostsExcept","PostsList","dispatch","posts","postsStatus","error","content","orderedPosts","slice","sort","a","b","date","localeCompare","map","post","id","renderedPosts"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/PostsList.tsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\n// Import della selezione di tutti i post\nimport { selectAllPosts, getPostStatus, getPostsError, fetchPosts } from './postsSlice'\nimport { useEffect } from 'react';\nimport PostsExcept from './PostsExcept';\n\nconst PostsList = () => {\n\n    const dispatch = useDispatch();\n\n    // Legata la selezione di tutti i post\n    const posts = useSelector(selectAllPosts);\n    const postsStatus = useSelector(getPostStatus);\n    const error = useSelector(getPostsError);\n\n    useEffect(() => {\n        if(postsStatus === 'idle'){\n            dispatch(fetchPosts())\n        }\n    }, [postsStatus, dispatch])\n\n    let content;\n    if (postsStatus === 'loading'){\n        content = <p>\"Loading...\"</p>;\n    } else if (postsStatus === 'succeeded'){\n        const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n        content = orderedPosts.map(post => <PostsExcept key={post.id} post={post} />)\n    }\n\n    return (\n        <section className='posts-section pt-3'>\n            <h2 className='text-center'>Posts</h2>\n            <div className='posts-wrapper w-50 mx-auto p-1'>\n                {renderedPosts}\n            </div>\n        </section>\n    );\n}\n\nexport default PostsList;"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,UAAvD,QAAyE,cAAzE;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAFoB,CAIpB;;EACA,MAAMS,KAAK,GAAGV,WAAW,CAACE,cAAD,CAAzB;EACA,MAAMS,WAAW,GAAGX,WAAW,CAACG,aAAD,CAA/B;EACA,MAAMS,KAAK,GAAGZ,WAAW,CAACI,aAAD,CAAzB;EAEAE,SAAS,CAAC,MAAM;IACZ,IAAGK,WAAW,KAAK,MAAnB,EAA0B;MACtBF,QAAQ,CAACJ,UAAU,EAAX,CAAR;IACH;EACJ,CAJQ,EAIN,CAACM,WAAD,EAAcF,QAAd,CAJM,CAAT;EAMA,IAAII,OAAJ;;EACA,IAAIF,WAAW,KAAK,SAApB,EAA8B;IAC1BE,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAV;EACH,CAFD,MAEO,IAAIF,WAAW,KAAK,WAApB,EAAgC;IACnC,MAAMG,YAAY,GAAGJ,KAAK,CAACK,KAAN,GAAcC,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,IAAF,CAAOC,aAAP,CAAqBH,CAAC,CAACE,IAAvB,CAA7B,CAArB;IACAN,OAAO,GAAGC,YAAY,CAACO,GAAb,CAAiBC,IAAI,iBAAI,QAAC,WAAD;MAA2B,IAAI,EAAEA;IAAjC,GAAkBA,IAAI,CAACC,EAAvB;MAAA;MAAA;MAAA;IAAA,QAAzB,CAAV;EACH;;EAED,oBACI;IAAS,SAAS,EAAC,oBAAnB;IAAA,wBACI;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,gCAAf;MAAA,UACKC;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CA/BD;;GAAMhB,S;UAEeP,W,EAGHD,W,EACMA,W,EACNA,W;;;KAPZQ,S;AAiCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}