{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './general.scss';\nimport PostsList from './features/posts/PostsList';\nimport AddPostForm from './features/posts/AddPostForm';\nimport { useEffect, useRef } from 'react';\nimport { fetchUsers } from './features/users/usersSlice';\nimport { store } from './app/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let isMounted = useRef(false); // Si vogliono caricare gli utenti esattamente quando l'app viene lanciata \n\n  useEffect(() => {\n    if (!isMounted.current) {\n      store.dispatch(fetchUsers());\n      isMounted.current = true;\n      console.log('test');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddPostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","PostsList","AddPostForm","useEffect","useRef","fetchUsers","store","App","isMounted","current","dispatch","console","log"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './general.scss';\nimport PostsList from './features/posts/PostsList';\nimport AddPostForm from './features/posts/AddPostForm';\nimport { useEffect, useRef } from 'react';\nimport { fetchUsers } from './features/users/usersSlice';\nimport { store } from './app/store';\n\nfunction App() {\n\n    let isMounted = useRef(false);\n\n    // Si vogliono caricare gli utenti esattamente quando l'app viene lanciata \n    useEffect(() => {\n      if(!isMounted.current){\n        store.dispatch(fetchUsers());\n        isMounted.current = true;\n        console.log('test')\n      }\n    }, []);\n\n\n\n    return (\n      <main className=\"App\">\n        <AddPostForm />\n        <PostsList />\n      </main>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,KAAT,QAAsB,aAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,IAAIC,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAtB,CAFW,CAIX;;EACAD,SAAS,CAAC,MAAM;IACd,IAAG,CAACK,SAAS,CAACC,OAAd,EAAsB;MACpBH,KAAK,CAACI,QAAN,CAAeL,UAAU,EAAzB;MACAG,SAAS,CAACC,OAAV,GAAoB,IAApB;MACAE,OAAO,CAACC,GAAR,CAAY,MAAZ;IACD;EACF,CANQ,EAMN,EANM,CAAT;EAUA,oBACE;IAAM,SAAS,EAAC,KAAhB;IAAA,wBACE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMH;;GArBQL,G;;KAAAA,G;AAuBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}