{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/PostsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux'; // Import della selezione di tutti i post\n\nimport { selectAllPosts, getPostStatus, getPostsError, fetchPosts } from './postsSlice';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = () => {\n  _s();\n\n  const dispatch = useDispatch(); // Legata la selezione di tutti i post\n\n  const posts = useSelector(selectAllPosts);\n  const postsStatus = useSelector(getPostStatus);\n  const error = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]); // Ordine posts in base a date\n\n  const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n  const renderedPosts = orderedPosts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-credit\",\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \",\", /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timeStamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-section pt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-wrapper w-50 mx-auto p-1\",\n      children: renderedPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"xOfALbeNiurMcSA9N+vFr+Uoyrc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","selectAllPosts","getPostStatus","getPostsError","fetchPosts","useEffect","PostsList","dispatch","posts","postsStatus","error","orderedPosts","slice","sort","a","b","date","localeCompare","renderedPosts","map","post","title","content","substring","userId","id"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/PostsList.tsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\n// Import della selezione di tutti i post\nimport { selectAllPosts, getPostStatus, getPostsError, fetchPosts } from './postsSlice'\nimport { useEffect } from 'react';\n\nconst PostsList = () => {\n\n    const dispatch = useDispatch();\n\n    // Legata la selezione di tutti i post\n    const posts = useSelector(selectAllPosts);\n    const postsStatus = useSelector(getPostStatus);\n    const error = useSelector(getPostsError);\n\n    useEffect(() => {\n        if(postsStatus === 'idle'){\n            dispatch(fetchPosts())\n        }\n    }, [postsStatus, dispatch])\n\n    // Ordine posts in base a date\n    const orderedPosts = posts.slice().sort((a,b) => b.date.localeCompare(a.date));\n\n    const renderedPosts = orderedPosts.map(post => (\n        <article key={post.id} className='post'>\n            <h3>{post.title}</h3>\n            <p>{post.content.substring(0, 100)}</p>\n\n            <p className='post-credit'>\n                <PostAuthor userId={post.userId} />,\n                <TimeAgo timeStamp={post.date} />\n            </p>\n\n            <ReactionButtons post={post} />\n        </article>\n    ));\n\n    return (\n        <section className='posts-section pt-3'>\n            <h2 className='text-center'>Posts</h2>\n            <div className='posts-wrapper w-50 mx-auto p-1'>\n                {renderedPosts}\n            </div>\n        </section>\n    );\n}\n\nexport default PostsList;"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,UAAvD,QAAyE,cAAzE;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFoB,CAIpB;;EACA,MAAMQ,KAAK,GAAGT,WAAW,CAACE,cAAD,CAAzB;EACA,MAAMQ,WAAW,GAAGV,WAAW,CAACG,aAAD,CAA/B;EACA,MAAMQ,KAAK,GAAGX,WAAW,CAACI,aAAD,CAAzB;EAEAE,SAAS,CAAC,MAAM;IACZ,IAAGI,WAAW,KAAK,MAAnB,EAA0B;MACtBF,QAAQ,CAACH,UAAU,EAAX,CAAR;IACH;EACJ,CAJQ,EAIN,CAACK,WAAD,EAAcF,QAAd,CAJM,CAAT,CAToB,CAepB;;EACA,MAAMI,YAAY,GAAGH,KAAK,CAACI,KAAN,GAAcC,IAAd,CAAmB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,IAAF,CAAOC,aAAP,CAAqBH,CAAC,CAACE,IAAvB,CAA5B,CAArB;EAEA,MAAME,aAAa,GAAGP,YAAY,CAACQ,GAAb,CAAiBC,IAAI,iBACvC;IAAuB,SAAS,EAAC,MAAjC;IAAA,wBACI;MAAA,UAAKA,IAAI,CAACC;IAAV;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAID,IAAI,CAACE,OAAL,CAAaC,SAAb,CAAuB,CAAvB,EAA0B,GAA1B;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII;MAAG,SAAS,EAAC,aAAb;MAAA,wBACI,QAAC,UAAD;QAAY,MAAM,EAAEH,IAAI,CAACI;MAAzB;QAAA;QAAA;QAAA;MAAA,QADJ,oBAEI,QAAC,OAAD;QAAS,SAAS,EAAEJ,IAAI,CAACJ;MAAzB;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eASI,QAAC,eAAD;MAAiB,IAAI,EAAEI;IAAvB;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA,GAAcA,IAAI,CAACK,EAAnB;IAAA;IAAA;IAAA;EAAA,QADkB,CAAtB;EAcA,oBACI;IAAS,SAAS,EAAC,oBAAnB;IAAA,wBACI;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,gCAAf;MAAA,UACKP;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAxCD;;GAAMZ,S;UAEeN,W,EAGHD,W,EACMA,W,EACNA,W;;;KAPZO,S;AA0CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}