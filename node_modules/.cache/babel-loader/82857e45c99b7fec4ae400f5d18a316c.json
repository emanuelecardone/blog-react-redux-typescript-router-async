{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programmazione\\\\Repo\\\\react-redux-typescript-async\\\\src\\\\features\\\\posts\\\\ReactionButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postsSlice\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reactionEmoji = {\n  thumbsUp: 'üëç',\n  wow: 'üòÆ',\n  heart: '‚ù§Ô∏è',\n  rocket: 'üöÄ',\n  coffee: '‚òï'\n}; // Funzione per tipizzare le keys\n\nfunction typedKeys(obj) {\n  return Object.keys(obj);\n}\n\nconst ReactionButtons = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const dispatch = useDispatch(); // Object.entries(reactionEmoji) permette di mappare su tutto nell'oggetto\n\n  const reactionButtons = typedKeys(reactionEmoji).map(name => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"reactionButton mx-1 px-1\",\n      onClick: () => dispatch(reactionAdded({\n        postId: post.id,\n        reaction: name\n      })),\n      children: [reactionEmoji[name], \" \", post.reactions[name]]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reactionButtons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactionButtons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ReactionButtons;\nexport default ReactionButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactionButtons\");","map":{"version":3,"names":["useDispatch","reactionAdded","React","reactionEmoji","thumbsUp","wow","heart","rocket","coffee","typedKeys","obj","Object","keys","ReactionButtons","post","dispatch","reactionButtons","map","name","postId","id","reaction","reactions"],"sources":["D:/Programmazione/Repo/react-redux-typescript-async/src/features/posts/ReactionButtons.tsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../app/store\";\r\nimport { reactionAdded } from \"./postsSlice\";\r\nimport React from 'react'\r\n\r\ntype Props = {\r\n    post: {\r\n        id: string; \r\n        title: string; \r\n        body: string;\r\n        userId: string | number;\r\n        date: string;\r\n        reactions: {\r\n            thumbsUp: number;\r\n            wow: number;\r\n            heart: number;\r\n            rocket: number;\r\n            coffee: number;\r\n        }\r\n    }\r\n}\r\n\r\nconst reactionEmoji = {\r\n    thumbsUp: 'üëç',\r\n    wow: 'üòÆ',\r\n    heart: '‚ù§Ô∏è',\r\n    rocket: 'üöÄ',\r\n    coffee: '‚òï'\r\n}\r\n\r\n// Funzione per tipizzare le keys\r\nfunction typedKeys<T extends Object>(obj: T): Array<keyof T> {\r\n    return Object.keys(obj) as Array<keyof typeof obj>;\r\n}\r\n\r\nconst ReactionButtons = ({post}: Props) => {\r\n\r\n    const dispatch = useDispatch<AppDispatch>();\r\n\r\n    // Object.entries(reactionEmoji) permette di mappare su tutto nell'oggetto\r\n    const reactionButtons = typedKeys(reactionEmoji).map((name) => {\r\n        return (\r\n            <button\r\n                key={name}\r\n                type=\"button\"\r\n                className=\"reactionButton mx-1 px-1\"\r\n                onClick={() =>\r\n                    dispatch(reactionAdded({ postId: post.id, reaction: name}))\r\n                }\r\n            >\r\n                {reactionEmoji[name]} {post.reactions[name]}\r\n            </button>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {reactionButtons}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactionButtons"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAmBA,MAAMC,aAAa,GAAG;EAClBC,QAAQ,EAAE,IADQ;EAElBC,GAAG,EAAE,IAFa;EAGlBC,KAAK,EAAE,IAHW;EAIlBC,MAAM,EAAE,IAJU;EAKlBC,MAAM,EAAE;AALU,CAAtB,C,CAQA;;AACA,SAASC,SAAT,CAAqCC,GAArC,EAA6D;EACzD,OAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAP;AACH;;AAED,MAAMG,eAAe,GAAG,QAAmB;EAAA;;EAAA,IAAlB;IAACC;EAAD,CAAkB;EAEvC,MAAMC,QAAQ,GAAGf,WAAW,EAA5B,CAFuC,CAIvC;;EACA,MAAMgB,eAAe,GAAGP,SAAS,CAACN,aAAD,CAAT,CAAyBc,GAAzB,CAA8BC,IAAD,IAAU;IAC3D,oBACI;MAEI,IAAI,EAAC,QAFT;MAGI,SAAS,EAAC,0BAHd;MAII,OAAO,EAAE,MACLH,QAAQ,CAACd,aAAa,CAAC;QAAEkB,MAAM,EAAEL,IAAI,CAACM,EAAf;QAAmBC,QAAQ,EAAEH;MAA7B,CAAD,CAAd,CALhB;MAAA,WAQKf,aAAa,CAACe,IAAD,CARlB,OAQ2BJ,IAAI,CAACQ,SAAL,CAAeJ,IAAf,CAR3B;IAAA,GACSA,IADT;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH,CAbuB,CAAxB;EAeA,oBACI;IAAA,UACKF;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAzBD;;GAAMH,e;UAEeb,W;;;KAFfa,e;AA2BN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}