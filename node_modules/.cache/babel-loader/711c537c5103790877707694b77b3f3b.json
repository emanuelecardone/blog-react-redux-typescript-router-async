{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst initialState = [];\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  try {\n    const response = await axios.get(USERS_URL);\n    const data = response.data;\n    return [...data];\n  } catch (err) {\n    if (typeof err === 'string') {\n      return err;\n    } else if (err instanceof Error) {\n      return err.message;\n    }\n  }\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    // Senza funzioni js come il push nell'array, si sta facendo un override totale dell'initialState \n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n\n});\nexport const selectAllUsers = state => state.users;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","USERS_URL","initialState","fetchUsers","response","get","data","err","Error","message","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectAllUsers","users","reducer"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/users/usersSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction, Action } from \"@reduxjs/toolkit\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { Status } from \"../posts/postsSlice\";\nimport { RootState } from \"../../app/store\";\n\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\ntype User = {\n    id: number | string;\n    name: string;\n    username: string;\n    email: string;\n    address: object;\n    phone: string;\n    website: string;\n    company: object;\n}\n\ntype Users = User[];\n\ntype UsersPayload = PayloadAction<Users>;\n\nconst initialState: Array<any> = [];\n\nexport const fetchUsers = createAsyncThunk<Users>('users/fetchUsers', async () => {\n\n    try{\n\n        const response: AxiosResponse = await axios.get(USERS_URL);\n        const data: Users = response.data;\n        return [...data];\n\n    } catch(err: unknown){\n\n        if(typeof err === 'string'){\n            return err;\n        } else if (err instanceof Error){\n            return err.message;\n        }\n\n    }\n});\n\nconst usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {},\n    extraReducers(builder){\n        // Senza funzioni js come il push nell'array, si sta facendo un override totale dell'initialState \n        builder.addCase(fetchUsers.fulfilled, (state, action) => {\n            return action.payload;\n        })\n    }\n});\n\n\nexport const selectAllUsers = (state: RootState) => state.users;\n\nexport default usersSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAAqE,kBAArE;AACA,OAAOC,KAAP,MAAqC,OAArC;AAIA,MAAMC,SAAS,GAAG,4CAAlB;AAiBA,MAAMC,YAAwB,GAAG,EAAjC;AAEA,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAAQ,kBAAR,EAA4B,YAAY;EAE9E,IAAG;IAEC,MAAMK,QAAuB,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUJ,SAAV,CAAtC;IACA,MAAMK,IAAW,GAAGF,QAAQ,CAACE,IAA7B;IACA,OAAO,CAAC,GAAGA,IAAJ,CAAP;EAEH,CAND,CAME,OAAMC,GAAN,EAAmB;IAEjB,IAAG,OAAOA,GAAP,KAAe,QAAlB,EAA2B;MACvB,OAAOA,GAAP;IACH,CAFD,MAEO,IAAIA,GAAG,YAAYC,KAAnB,EAAyB;MAC5B,OAAOD,GAAG,CAACE,OAAX;IACH;EAEJ;AACJ,CAjByC,CAAnC;AAmBP,MAAMC,UAAU,GAAGZ,WAAW,CAAC;EAC3Ba,IAAI,EAAE,OADqB;EAE3BT,YAF2B;EAG3BU,QAAQ,EAAE,EAHiB;;EAI3BC,aAAa,CAACC,OAAD,EAAS;IAClB;IACAA,OAAO,CAACC,OAAR,CAAgBZ,UAAU,CAACa,SAA3B,EAAsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACrD,OAAOA,MAAM,CAACC,OAAd;IACH,CAFD;EAGH;;AAT0B,CAAD,CAA9B;AAaA,OAAO,MAAMC,cAAc,GAAIH,KAAD,IAAsBA,KAAK,CAACI,KAAnD;AAEP,eAAeX,UAAU,CAACY,OAA1B"},"metadata":{},"sourceType":"module"}