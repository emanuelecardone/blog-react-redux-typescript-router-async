{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/AddPostForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewPost } from './postsSlice';\nimport { selectAllUsers } from '../users/usersSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPostForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setuserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const users = useSelector(selectAllUsers);\n  const dispatch = useDispatch();\n\n  const onTitleChanged = e => {\n    setTitle(e.target.value);\n  };\n\n  const onContentChanged = e => {\n    setContent(e.target.value);\n  };\n\n  const onAuthorChanged = e => {\n    setuserId(e.target.value);\n  }; // Controllo validità di tutte e 3 i campi e status idle\n\n\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n\n  const savePost = e => {\n    e.preventDefault();\n\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n        dispatch(addNewPost({\n          title,\n          body: content,\n          userId\n        })).unwrap();\n        setTitle('');\n        setContent('');\n        setuserId('');\n      } catch (err) {\n        console.error('Failed to save the post', err);\n      } finally {\n        setAddRequestStatus('idle');\n      }\n    }\n  };\n\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: savePost,\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-title\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"post-title\",\n        name: \"post-title\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-author\",\n        className: \"mt-2\",\n        children: \"Post Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"mb-2\",\n        name: \"post-author\",\n        id: \"post-author\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post-content\",\n        children: \"Post Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"post-content\",\n        name: \"post-content\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2\" // Disabled è l'opposto di canSave\n        ,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPostForm, \"m6d/VWzu6VzVHkiEetKI50KPubk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addNewPost","selectAllUsers","AddPostForm","title","setTitle","content","setContent","userId","setuserId","addRequestStatus","setAddRequestStatus","users","dispatch","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","savePost","preventDefault","body","unwrap","err","console","error","usersOptions","map","user","id","name"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/AddPostForm.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../../app/store';\nimport { addNewPost } from './postsSlice';\nimport { selectAllUsers } from '../users/usersSlice';\n\nconst AddPostForm = () => {\n\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [userId, setuserId] = useState('');\n    const [addRequestStatus, setAddRequestStatus] = useState('idle');\n\n    const users = useSelector(selectAllUsers);\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const onTitleChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.target.value);\n    }\n    const onContentChanged = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setContent(e.target.value);\n    }\n    const onAuthorChanged = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setuserId(e.target.value);\n    }\n\n    // Controllo validità di tutte e 3 i campi e status idle\n    const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n\n    const savePost = (e: React.FormEvent) => {\n        e.preventDefault();\n        if(canSave){\n            try {\n                setAddRequestStatus('pending');\n                dispatch(addNewPost({title, body: content, userId})).unwrap();\n                setTitle('');\n                setContent('');\n                setuserId('');\n            } catch(err){\n                console.error('Failed to save the post', err);\n            } finally {\n                setAddRequestStatus('idle');\n            }\n        }\n    }\n\n    const usersOptions = users.map(user => (\n        <option key={user.id} value={user.id}>\n            {user.name}\n        </option>\n    ));\n\n    return (\n        <section>\n            <h2>Add a New Post</h2>\n            <form onSubmit={savePost} className='d-flex flex-column'>\n                \n                {/* TITLE */}\n                <label htmlFor=\"post-title\">Post Title:</label>\n                <input \n                    type=\"text\" \n                    id='post-title'\n                    name='post-title'\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n\n                {/* AUTHOR */}\n                <label htmlFor=\"post-author\" className='mt-2'>Post Author:</label>\n                <select\n                    className='mb-2' \n                    name=\"post-author\" \n                    id=\"post-author\"\n                    value={userId}\n                    onChange={onAuthorChanged}\n                >\n                    {/* Vuota */}\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n\n                {/* CONTENT */}\n                <label htmlFor=\"post-content\">Post Content:</label>\n                <textarea \n                    id='post-content' \n                    name='post-content'\n                    value={content}\n                    onChange={onContentChanged}\n                />\n                <button \n                    type='submit' \n                    className='mt-2'\n                    // Disabled è l'opposto di canSave\n                    disabled={!canSave}\n                >\n                    Save Post\n                </button>\n            </form>\n        </section>\n    )\n}\n\nexport default AddPostForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}