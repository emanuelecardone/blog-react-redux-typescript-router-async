{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/SinglePostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { selectPostById } from \"./postsSlice\";\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport ReactionButtons from \"./ReactionButtons\";\n// ROUTER\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePostPage = () => {\n  _s();\n\n  // Recupero id del post (tramite parametro url del router)\n  const {\n    postId\n  } = useParams(); // La tipizzazione come RootState va messa anche nel parametro\n\n  const post = useSelector(state => selectPostById(state, Number(postId)));\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"post-not-found\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-post-page\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"single-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-credit\",\n        children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n          userId: post.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n          timeStamp: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePostPage, \"YH4LRQJF6jPhtpQOPDoIQnDwlCE=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = SinglePostPage;\nexport default SinglePostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"names":["useSelector","selectPostById","PostAuthor","TimeAgo","ReactionButtons","useParams","SinglePostPage","postId","post","state","Number","title","body","userId","date"],"sources":["/Users/emanuelecardone/Desktop/Corsi /Redux/Esempi/react-redux-typescript-async/src/features/posts/SinglePostPage.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectPostById } from \"./postsSlice\";\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport ReactionButtons from \"./ReactionButtons\";\nimport { RootState } from \"../../app/store\";\n// ROUTER\nimport { useParams } from \"react-router-dom\";\n\nconst SinglePostPage = () => {\n\n    // Recupero id del post (tramite parametro url del router)\n    const { postId } = useParams();\n\n    // La tipizzazione come RootState va messa anche nel parametro\n    const post = useSelector((state: RootState) => selectPostById(state, Number(postId)));\n\n    if(!post){\n        return (\n            <section className=\"post-not-found\">\n                <h2>Post not found!</h2>\n            </section>\n        );\n    }\n\n    return (\n        <div className=\"single-post-page\">\n            <article className=\"single-post\">\n                <h2>{post.title}</h2>\n                <p>{post.body}</p>\n                <p className=\"post-credit\">\n                    <PostAuthor userId={post.userId} />\n                    <TimeAgo timeStamp={post.date} />\n                </p>\n                <ReactionButtons post={post} />\n            </article>\n        </div>\n    );\n}\n\nexport default SinglePostPage"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAEzB;EACA,MAAM;IAAEC;EAAF,IAAaF,SAAS,EAA5B,CAHyB,CAKzB;;EACA,MAAMG,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAsBR,cAAc,CAACQ,KAAD,EAAQC,MAAM,CAACH,MAAD,CAAd,CAArC,CAAxB;;EAEA,IAAG,CAACC,IAAJ,EAAS;IACL,oBACI;MAAS,SAAS,EAAC,gBAAnB;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,oBACI;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACI;MAAS,SAAS,EAAC,aAAnB;MAAA,wBACI;QAAA,UAAKA,IAAI,CAACG;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIH,IAAI,CAACI;MAAT;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAG,SAAS,EAAC,aAAb;QAAA,wBACI,QAAC,UAAD;UAAY,MAAM,EAAEJ,IAAI,CAACK;QAAzB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,OAAD;UAAS,SAAS,EAAEL,IAAI,CAACM;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAOI,QAAC,eAAD;QAAiB,IAAI,EAAEN;MAAvB;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA7BD;;GAAMF,c;UAGiBD,S,EAGNL,W;;;KANXM,c;AA+BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}